{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.html",
    "../src/components/Button.html",
    "../src/components/Buttons.html",
    "../src/language/Json.html"
  ],
  "sourcesContent": [
    "<!-- Оставь надежду всяк сюда входящий -->\n\n<div class=\"main\">\n\t<h1>Генератор клавиатуры для VK</h1>\n\t\n  <p>\n\t\tГенерирует <a href=\"https://vk.com/dev/bots_docs_3\">клавиатуру</a> для ботов. \n    Проверить клавиатуру можно отправив JSON <a href=\"https://vk.com/im?sel=-174472256\">боту</a>.\n\t</p>\n  <p>\n    <a href=\"https://github.com/severecloud/vk-keyboard\">GitHub</a>\n  </p>\n\n  <h3>Клавиатура</h3>\n\n\t<div class=\"buttons-main\">\n\t\t{#each keyboard.buttons as buttons, ii}\n\t\t<div class=\"row\">\n\t\t\t<Buttons>\n\t\t\t\t{#each buttons as button, jj}\n\t\t\t\t<Button label=\"{button.action.label}\" color=\"{button.color}\" select=\"{i==ii&&j==jj?'1':'0'}\" on:click=\"set({i: ii,j: jj})\"\n\t\t\t\t/> {/each}\n\t\t\t</Buttons>\n\t\t\t{#if keyboard.buttons[ii].length < 4} <div class=\"button-add\" on:click=\"addColumn(ii)\">+</div>{/if}\n    </div>\n    {/each} \n    {#if keyboard.buttons.length < 10}<div class=\"button-add\" on:click=\"addRow()\">Добавить</div>{/if}\n\n    <div class=\"border\">\n      <div class=\"block-item\">\n        <label>Текст</label>\n        <input type=\"text\" bind:value=\"keyboard.buttons[i][j].action.label\">\n        {#if keyboard.buttons[i][j].action.label===\"\"}<b class=\"note\" style=\"color:#db3b3b;\">Пустой текст!</b>{/if}\n        {#if keyboard.buttons[i][j].action.label.length > 41}<b class=\"note\" style=\"color:#db3b3b;\">Слишком много символов!</b>{/if}\n      </div>\n\n      <div class=\"block-item\">\n        <label>Полезная нагрузка</label>\n        <input type=\"text\" bind:value=\"keyboard.buttons[i][j].action.payload\"> \n        {#if !validPayload}<b class=\"note\" style=\"color:#db3b3b;\">Невалидный JSON!</b>{/if}\n      </div>\n\n      <div class=\"block-item\">\n        <label>Цвет</label>\n        <Buttons>\n          {#each [\"primary\", \"default\", \"negative\", \"positive\"] as color}\n            <Button label=\"{keyboard.buttons[i][j].color==color?'X':''}\" color=\"{color}\" on:click=\"updateColor(event.color)\" />\n          {/each}\n        </Buttons>\n      </div>\n\n      <div class=\"button-remove\" on:click=\"removeButton()\">Удалить</div>\n    </div>\n\n    <div class=\"one-time\">\n      <input type=\"checkbox\" bind:checked=\"keyboard.one_time\">\n      <label>скрывать клавиатуру сразу</label>\n    </div>\n\n  </div>\n\n  {#if errorValid}\n    <h3>Ошибки</h3>\n    <pre>{errorValid}</pre>\n  {:else}\n    <select class=\"header\" bind:value='select'>\n      <option value=\"JSON\">JSON</option>\n      <option value=\"Golang\">Golang</option>\n      <option value=\"Golang-vksdk\">Golang vksdk</option>\n    </select>\n\n    {#if select==\"JSON\"}\n      <Json {keyboard}/>\n    {:elseif select==\"Golang\"}\n      <Golang {keyboard}/>\n    {:elseif select==\"Golang-vksdk\"}\n      <Golang_vksdk {keyboard}/>\n    {/if}\n  {/if}\n\n</div>\n\n<style>\n  .header{\n    font-size: 1.25em;\n    font-weight: 600;\n    line-height: 1.25;\n    border: none;\n    background: none;\n    padding: 0;\n    margin: 24px 0 16px;\n    color: #333;\n  }\n  .main {\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 40px;\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial,\n      sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;\n  }\n  .border {\n    background-color: #fff;\n    border: 1px solid #d1d5da;\n    border-radius: 3px;\n    padding: 16px 16px 8px;\n    margin-bottom: 16px;\n    margin-top: 16px;\n  }\n\n  .buttons-main {\n    max-width: 492px;\n    margin: 0 auto;\n    border-radius: 3px;\n    margin-bottom: 16px;\n    margin-top: 0;\n  }\n  .buttons-main label {\n    font-weight: 600;\n    margin: 0 0 6px;\n  }\n  .note {\n    color: #586069;\n    font-size: 12px;\n    margin: 4px 0 2px;\n    min-height: 17px;\n  }\n  .block-item{\n    margin-bottom: 16px;\n  }\n\n  .one-time,\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n  \n\n  .button-add, .button-remove {\n    margin: 5px auto;\n    line-height: 38px;\n    cursor: pointer;\n    text-align: center;\n    border-radius: 4px;\n    max-width: 200px;\n    user-select: none;\n  }\n\n  .button-add{\n    color: #55677d;\n  }\n  .button-add:hover {\n    background: #dfe6ed;\n  }\n  .button-add:active {\n    background: #dae2ea;\n  }\n\n  .button-remove{\n    color: #db3b3b;\n  }\n  .button-remove:hover {\n    color: #fff;\n    background: #eb5050;\n  }\n  .button-remove:active {\n    color: #fff;\n    background: #db3b3b;\n  }\n\n  .one-time {\n    margin-bottom: 16px;\n    margin-top: 0;\n  }\n  .one-time label {\n    margin-left: 6px;\n  }\n</style>\n\n<script>\n  export default {\n    components: {\n      Button: \"./components/Button.html\",\n      Buttons: \"./components/Buttons.html\",\n      Json: \"./language/Json.html\",\n      Golang: \"./language/Golang.html\",\n      Golang_vksdk: \"./language/Golang-vksdk.html\"\n    },\n\n    computed: {\n      validPayload: ({ keyboard, i, j }) => {\n        let isObject = data => data instanceof Object && !Array.isArray(data);\n        let p = keyboard.buttons[i][j].action.payload;\n        let a;\n        try {\n          a = JSON.parse(p);\n        } catch (e) {\n          return false;\n        }\n        return isObject(a) && Object.keys(a).length != 0 && p.length < 256;\n      },\n      errorValid: ({ keyboard }) => {\n        let text = \"\"\n\n        for (let i = 0; i < keyboard.buttons.length; i++) {\n          const buttons = keyboard.buttons[i];\n          for (let j = 0; j < buttons.length; j++) {\n            const button = buttons[j];\n\n            if (button.action.label == \"\") {\n              text += `${i+1}:${j+1} пустой текст\\n`;\n            }\n            if (button.action.label.length > 41) {\n              text += `${i+1}:${j+1} больше 40 символов в тексте\\n`;\n            }\n            \n            let isObject = data => data instanceof Object && !Array.isArray(data);\n            let p = button.action.payload;\n            let a;\n            try {\n              a = JSON.parse(p);\n              if (!isObject(a)){\n                text += `${i+1}:${j+1} требуется объект в json вида {\"button\": 1}\\n`;\n              }\n              if (Object.keys(a).length == 0){\n                text += `${i+1}:${j+1} пустой объект в json\\n`;\n              }\n              if (p.length > 255){\n                text += `${i+1}:${j+1} больше 255 символов в json\\n`;\n              }\n            } catch (e) {\n              text += `${i+1}:${j+1} невалидный json\\n`;\n            }\n          }\n        }\n        localStorage.setItem('keyboard', JSON.stringify(keyboard));\n        return text;\n      }\n    },\n\n    methods: {\n      updateColor(color) {\n        const { keyboard, i, j } = this.get();\n\n        keyboard.buttons[i][j].color = color;\n\n        this.set({ keyboard });\n      },\n      addRow() {\n        const { keyboard, i, j } = this.get();\n\n        let len = keyboard.buttons.length;\n        if (len < 10) {\n          keyboard.buttons[len] = [\n            {\n              action: {\n                type: \"text\",\n                payload: '{\"button\": \"1\"}',\n                label: \"Label\"\n              },\n              color: \"default\"\n            }\n          ];\n        }\n\n        this.set({ keyboard, i: len, j: 0 });\n      },\n      addColumn(ii) {\n        const { keyboard, i, j } = this.get();\n\n        let len = keyboard.buttons[ii].length;\n        if (len < 4) {\n          keyboard.buttons[ii][len] = {\n            action: {\n              type: \"text\",\n              payload: '{\"button\": \"1\"}',\n              label: \"Label\"\n            },\n            color: \"default\"\n          };\n        }\n\n        this.set({ keyboard, i: ii, j: len });\n      },\n      removeButton() {\n        const { keyboard, i, j } = this.get();\n        let ii = i;\n        let jj = j;\n\n        let lenr = keyboard.buttons.length;\n        let lenc = keyboard.buttons[0].length;\n        console.log(lenr, lenc);\n        if (lenr > 1 || lenc > 1) {\n          keyboard.buttons[i].splice(j, 1);\n          if (keyboard.buttons[i].length == 0) {\n            keyboard.buttons.splice(i, 1);\n            if (i > 0) {\n              ii = i - 1;\n            }\n            jj = keyboard.buttons[ii].length - 1;\n          } else if (j > 0) {\n            jj = j - 1;\n          }\n        }\n\n        this.set({ keyboard, i: ii, j: jj });\n      }\n    }\n  };\n</script>",
    "<div class=\"Button {color} {select==\"1\"?\"select\":\"\"}\" test=\"{select}\" on:click=\"fire('click', {color})\"><span>{label}</span></div>\n\n<style>\n  .Button {\n    display: flex;\n    flex: 1;\n    width: 0;\n    height: 38px;\n    margin: 5px;\n    border-radius: 4px;\n    cursor: pointer;\n    font: 400 13.3333px Arial;\n  }\n  .Button span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    padding: 7px 16px 8px;\n    margin: auto;\n  }\n\n  .select{\n    font-weight: 700;\n  }\n\n  .add{\n    border: 1px solid #d1d5da;\n  }\n\n  .primary {\n    background: #5181b8;\n    color: #fff;\n  }\n  .primary:hover {\n    background: #5b88bd;\n  }\n  .primary:active {\n    background: #4872a3;\n  }\n\n  .default {\n    background: #e5ebf1;\n    color: #55677d;\n  }\n  .default:hover {\n    background: #dfe6ed;\n  }\n  .default:active {\n    background: #dae2ea;\n  }\n\n  .negative {\n    background: #e64646;\n    color: #fff;\n  }\n  .negative:hover {\n    background: #eb5050;\n  }\n  .negative:active {\n    background: #db3b3b;\n  }\n\n  .positive {\n    background: #4bb34b;\n    color: #fff;\n  }\n  .positive:hover {\n    background: #51b851;\n  }\n  .positive:active {\n    background: #43a843;\n  }\n</style>\n\n<script>\n\texport default {\n\t  data() {\n\t    return {\n\t      select: \"0\"\n\t    };\n\t  }\n\t};\n</script>",
    "<div class=\"Buttons\">\n    <slot></slot>\n</div>\n\n<style>\n    .Buttons{\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n        height: 48px;\n    }\n</style>",
    "<div class=\"Rows\">\n\t<input type=\"checkbox\" bind:checked=\"JSONminify\">\n\t<label>JSON minify</label>\n</div>\n\n\n<pre>\n{JSON.stringify(keyboard, \"\", JSONminify?0:2)}\n</pre>\n\n<style>\n  .Rows {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 16px;\n    margin-top: 0;\n  }\n  .Rows label {\n    margin-left: 6px;\n  }\n</style>\n\n<script>\n\texport default {\n\t  data() {\n\t    return {\n\t      JSONminify: false\n\t    };\n\t  }\n\t};\n</script>\n\t"
  ],
  "names": [],
  "mappings": "AAmFE,sBAAO,CAAC,AACN,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CACnB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;MACzE,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,AAClE,CAAC,AACD,OAAO,eAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CACtB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,aAAa,eAAC,CAAC,AACb,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,CAAC,AACf,CAAC,AACD,4BAAa,CAAC,KAAK,eAAC,CAAC,AACnB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,AACjB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CACjB,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,0BAAW,CAAC,AACV,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,wBAAS,CACT,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACrB,CAAC,AAGD,0BAAW,CAAE,cAAc,eAAC,CAAC,AAC3B,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,0BAAW,CAAC,AACV,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,0BAAW,MAAM,AAAC,CAAC,AACjB,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,0BAAW,OAAO,AAAC,CAAC,AAClB,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,6BAAc,CAAC,AACb,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,6BAAc,MAAM,AAAC,CAAC,AACpB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,6BAAc,OAAO,AAAC,CAAC,AACrB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,SAAS,eAAC,CAAC,AACT,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,CAAC,AACf,CAAC,AACD,wBAAS,CAAC,KAAK,eAAC,CAAC,AACf,WAAW,CAAE,GAAG,AAClB,CAAC;AC5KD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OAAO,CACf,IAAI,CAAE,GAAG,CAAC,SAAS,CAAC,KAAK,AAC3B,CAAC,AACD,qBAAO,CAAC,IAAI,cAAC,CAAC,AACZ,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CACrB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,qBAAO,CAAC,AACN,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,kBAAI,CAAC,AACH,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC3B,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,sBAAQ,MAAM,AAAC,CAAC,AACd,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,sBAAQ,OAAO,AAAC,CAAC,AACf,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,sBAAQ,MAAM,AAAC,CAAC,AACd,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,sBAAQ,OAAO,AAAC,CAAC,AACf,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,uBAAS,MAAM,AAAC,CAAC,AACf,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,uBAAS,OAAO,AAAC,CAAC,AAChB,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,uBAAS,MAAM,AAAC,CAAC,AACf,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,uBAAS,OAAO,AAAC,CAAC,AAChB,UAAU,CAAE,OAAO,AACrB,CAAC;AClEC,sBAAQ,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAChB,CAAC;ACCH,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,CAAC,AACf,CAAC,AACD,mBAAK,CAAC,KAAK,cAAC,CAAC,AACX,WAAW,CAAE,GAAG,AAClB,CAAC"
}